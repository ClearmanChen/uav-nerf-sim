<!-- 本launch为使用airsim进行仿真时的启动脚本 -->
<launch>
    <arg name="airsim_ip" default="183.172.160.86"/>
    <arg name="map_size_x" value="55.0"/>
    <arg name="map_size_y" value="55.0"/>
    <arg name="map_size_z" value=" 7.5"/>
    <arg name="drone_num" value="2" />

    <!-- AirSim Wrapper -->
    <include file="airsim_node.launch">
        <arg name="output" default="screen"/>
        <arg name="host" value="$(arg airsim_ip)" />
        <arg name="world_frame_id" value="world_enu" />
    </include>

    <!-- <node pkg="uav_controller" type="uav_controller.py" name="uav_controller_node_1" output="screen">
        <param name="drone_id" value="1" type="int"/>
        <param name="cmd_topic" value="/planning/pos_cmd_1"/>
        <param name="if_planner_enabled" value="true" type="bool"/>
        <param name="airsim_ip" value="$(arg airsim_ip)"/>
    </node>

    <node pkg ="odom_transform" name ="odom_transform_node_1" type ="odom_transform_node" output = "screen">    
        <param name="drone_id" value="1" type="int"/>
        <param name="odom_input" value="/airsim_node/uav1/odom_local_enu"/>
        <param name="odom_output" value="/airsim_node/uav1/odom_world"/>
    </node> -->
    <include file="single_drone_exploration.xml">
        <arg name="drone_id" value="1"/>
        <arg name="map_size_x" value="$(arg map_size_x)"/>
        <arg name="map_size_y" value="$(arg map_size_y)"/>
        <arg name="map_size_z" value="$(arg map_size_z)"/>
        <arg name="drone_num" value="$(arg drone_num)"/>
        <arg name="airsim_ip" value="$(arg airsim_ip)"/>
   </include>

    <include file="single_drone_exploration.xml">
        <arg name="drone_id" value="2"/>
        <arg name="map_size_x" value="$(arg map_size_x)"/>
        <arg name="map_size_y" value="$(arg map_size_y)"/>
        <arg name="map_size_z" value="$(arg map_size_z)"/>
        <arg name="drone_num" value="$(arg drone_num)"/>
        <arg name="airsim_ip" value="$(arg airsim_ip)"/>
   </include>

   <include file="$(find foxglove_bridge)/launch/foxglove_bridge.launch">
        <arg name="port" value="8765"/>
   </include>
   
   <node pkg="tf" type="static_transform_publisher" name="world_tf_publisher" args="0 0 0 0 0 0 world_enu world 100" output="screen"/>

</launch>